{"version":3,"sources":["assets/giannis.jpg","assets/harden.jpg","apis/railsData.js","actions/index.js","containers/MainMenu.js","components/PlayerSeasonRow.js","components/PlayerSeasonTable.js","components/SearchBar.js","containers/PlayerSeasonContainer.js","components/GameRow.js","components/GameTable.js","containers/GamesContainer.js","components/BoxRow.js","components/BoxScoreTable.js","containers/GameBoxScore.js","containers/SeasonLanding.js","components/PersonalRow.js","components/PersonalBoxTable.js","components/SelectedDisplay/PlayerDisplayTable.js","components/SelectedDisplay/PlayerStatsVictory.js","components/SelectedDisplay/PlayerRadar.js","components/PlayerDisplay.js","components/SelectedDisplay/RadarTable.js","components/SelectedDisplay/MultiDropdown.js","components/SelectedDisplay/PlayerComparison.js","components/SelectedDisplay/MultiPlayerComparison.js","App.js","reducers/index.js","reducers/allSeasonsReducer.js","reducers/currentSeasonReducer.js","reducers/currentPlayerReducer.js","reducers/currentGameReducer.js","reducers/playerComparisonReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","axios","create","baseURL","shouldFetchData","state","ps1","currSeason","playerSeasons","data","sg1","seasonGames","year","team_season","season","requestSeasonGames","type","receivedSeasonGames","payload","MainMenu","_this","this","react_default","a","createElement","className","props","seasons","map","idx","Fragment","react_router_dom","key","to","concat","onClick","setSeason","src","image","alt","React","Component","connect","allSeasons","PlayerSeasonRow","_this$props$playerSea","playerSeason","age","mp_per_g","fg_per_g","fga_per_g","fg_pct","fg3_per_g","fg3a_per_g","fg3_pct","efg_pct","ft_per_g","fta_per_g","ft_pct","orb_per_g","drb_per_g","trb_per_g","ast_per_g","stl_per_g","blk_per_g","tov_per_g","pts_per_g","gp","fg2_per_g","fg2a_per_g","fg2_pct","pf_per_g","position","name","player","id","Table","Row","Cell","setPlayer","code","ownProps","find","ps","PlayerSeasonTable","fullwidth","celled","inverted","selectable","textAlign","style","tableLayout","maxWidth","fontSize","whiteSpace","Header","HeaderCell","width","Body","components_PlayerSeasonRow","SearchBar","_ref","onSearchChange","placeholder","onChange","PlayerSeasonContainer","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","searchTerm","target","value","_this2","filteredPlayers","filter","toLowerCase","includes","components_SearchBar","components_PlayerSeasonTable","GameRow","_this$props$game","game","date","start_time","home_team","home_pts","away_team","away_pts","convertedDate","substring","TableCell","setGame","sg","GameTable","gm","components_GameRow","GamesContainer","components_GameTable","BoxRow","_this$props$line","line","mp","fg","fga","fg3","fg3a","ft","fta","orb","drb","trb","ast","stl","blk","tov","pts","plus_minus","pf","dnp","player_season","BoxScoreTable","ordered","lines","sort","b","aa","parseInt","li","components_BoxRow","GameBoxScore","filterBoxScore","boxscore","team_filtered","home","away","currGame","forEach","team","push","fetchGameBoxScore","filtered","components_BoxScoreTable","_ref7","asyncToGenerator","regenerator_default","mark","_callee7","dispatch","getState","response","wrap","_context7","prev","next","railsData","get","sent","stop","_x12","_x13","apply","arguments","SeasonLanding","fetchAllSeasonDataIfNeeded","yr","ready","isFetching","react_loader_spinner_default","color","height","_ref5","_callee5","_context5","_ref3","_callee3","_context3","_x4","_x5","_ref4","_callee4","_context4","_x6","_x7","_x8","_x9","PersonalRow","PersonalBoxTable","TableBody","components_PersonalRow","PlayerDisplayTable","player_seasons","colorCodes","PlayerStatsVictory","getDates","g","readableDate","onMenuClick","selected","innerText","count","length","console","log","result","yy","label","stat","toUpperCase","x","y","pls","_this3","mappedLines","mapLinestoVictory","title","toLocaleUpperCase","victory_chart","domainPadding","theme","VictoryTheme","grayscale","containerComponent","victory_voronoi_container","victory_line","labelComponent","victory_tooltip","flyoutStyle","stroke","interpolation","parent","border","animate","duration","onLoad","victory_axis","dependentAxis","axis","tickLabels","ticks","size","axisLabel","padding","independentAxis","tickValues","tickFormat","PlayerRadar","groupedData","keys","reduce","memo","d","Math","max","toConsumableArray","maxByGroup","getMaxima","datum","statData","processData","stats","statMaxima","polar","material","domain","victory_group","colorScale","fillOpacity","strokeWidth","i","victory_area","victory_polar_axis","grid","opacity","tickLabelComponent","victory_label","labelPlacement","axisValue","t","num","ceil","round","PlayerDisplay","getRelaventGames","games","slice","radarPrep","currYear","PTS","REB","AST","STL","BLK","currPS","playerObj","parseFloat","fetchPlayer","SelectedDisplay_PlayerDisplayTable","SelectedDisplay_PlayerRadar","SelectedDisplay_PlayerStatsVictory","reverse","components_PersonalBoxTable","currPlayer","_ref6","_callee6","_context6","_x10","_x11","RadarTable","MultiDropdown","handleChange","selectedSeasons","getSelectedSeasons","setComparison","nums","radarDisplay","arr","radarStats","colorsInfo","colorString","colorCode","colorMap","str","Dropdown","fluid","multiple","search","selection","options","text","pc","SelectedDisplay_RadarTable","playerComparison","playersArr","results","multi","_callee2","_context2","Promise","all","_ref2","_callee","_context","abrupt","_x3","_x","_x2","PlayerComparison","last10","pl","MultiPlayerComparison","players","SelectedDisplay_MultiDropdown","SelectedDisplay_PlayerComparison","App","basename","react_router","path","exact","component","combineReducers","undefined","giannis","harden","action","objectSpread","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","thunk","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.09898ccf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/giannis.94f17838.jpg\";","module.exports = __webpack_public_path__ + \"static/media/harden.1e80a25f.jpg\";","import axios from 'axios'\n\nexport default axios.create({ baseURL: 'https://nbaapirails.herokuapp.com' })\n\n","import railsData from '../apis/railsData'\n\nexport const setSeason = (year) => {\n    return (\n        {\n            type: 'SET_SEASON',\n            payload: year\n        }\n    )\n}\n\nexport const setPlayer = (player) => {\n    return (\n        {\n            type: 'SET_PLAYER',\n            payload: player\n        }\n    )\n}\nexport const setComparison = (playersArr) => {\n    let results = {}\n    results.playerSeasons = playersArr\n    let multi = playersArr.map(ps => {\n        return ps[0].player.id\n    })\n    return async (dispatch, getState) => {\n        let data = await Promise.all(multi.map(async (id) => {\n            const response = await railsData.get('/players/' + id)\n            return response.data\n        }))\n        results.data = data\n        dispatch({ type: 'SET_COMPARISON', payload: results })\n\n    }\n}\n\n\nexport const setGame = (game) => {\n    return (\n        {\n            type: 'SET_GAME',\n            payload: game\n        }\n    )\n}\n\nexport const requestPlayerSeasons = (year) => {\n    return {\n        type: 'REQUEST_PLAYER_SEASONS',\n        year\n    }\n}\n\nexport const receivedPlayerSeasons = (data) => {\n    return {\n        type: 'RECEIVED_PLAYER_SEASONS',\n        payload: data\n    }\n}\n\nexport const fetchAllPlayerSeasons = () => {\n    return async (dispatch, getState) => {\n        let yr = getState().currSeason.year\n        dispatch(requestPlayerSeasons(yr))\n        const response = await railsData.get('/seasons/' + yr + '?stats=true')\n        dispatch(receivedPlayerSeasons(response.data))\n    }\n}\n\nexport const fetchSeasonGames = () => {\n    return async (dispatch, getState) => {\n        let yr = getState().currSeason.year\n        dispatch(requestSeasonGames())\n        const response = await railsData.get('/seasons/' + yr + '?games=true')\n        dispatch(receivedSeasonGames(response.data))\n    }\n}\n\nconst shouldFetchData = (state) => {\n    const ps1 = state.currSeason.playerSeasons.data[0]\n    const sg1 = state.currSeason.seasonGames.data[0]\n    const year = state.currSeason.year\n    if (!ps1 || !sg1) {\n        return true\n    }\n    return !(ps1.team_season.year === year || sg1.season.year === year)\n}\n\nexport const fetchAllSeasonDataIfNeeded = () => {\n    return async (dispatch, getState) => {\n        if (shouldFetchData(getState())) {\n            await dispatch(fetchAllPlayerSeasons())\n            await dispatch(fetchSeasonGames())\n        }\n    }\n}\n\nexport const requestSeasonGames = () => {\n    return {\n        type: 'REQUEST_SEASON_GAMES'\n    }\n}\n\nexport const receivedSeasonGames = (data) => {\n    return {\n        type: 'RECEIVED_SEASON_GAMES',\n        payload: data\n    }\n}\n\nexport const fetchPlayer = () => {\n    return async (dispatch, getState) => {\n        let id = getState().currPlayer.id\n        const response = await railsData.get('/players/' + id)\n        dispatch({ type: 'FETCH_PLAYER', payload: response.data })\n    }\n}\n\n\nexport const fetchGameBoxScore = () => {\n    return async (dispatch, getState) => {\n        let id = getState().currGame.id\n        const response = await railsData.get('/games/' + id)\n        dispatch({ type: 'FETCH_GAME_BOX_SCORE', payload: response.data })\n    }\n}\n\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setSeason } from '../actions'\n\n\n\nclass MainMenu extends React.Component {\n    render() {\n\n        return (\n            <div className='ui container center aligned'>\n                {this.props.seasons.map((season, idx) => {\n                    let year = season.year\n                    return (\n                        <>\n                            <Link key={idx} to={`/seasonhome/${year}`}>\n                                <div className='ui centered inverted card mainCard' key={idx} onClick={() => this.props.setSeason(year)} >\n                                    <div className=\"image\">\n                                        <img src={season.image} alt='' />\n                                        {`${year - 1}-${year} Season`}\n                                    </div>\n                                </div>\n                            </Link>\n                            <br></br>\n                            <br></br>\n                        </>\n                    )\n                })}\n\n            </div >\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { seasons: state.allSeasons }\n}\n\nexport default connect(mapStateToProps, { setSeason })(MainMenu)\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setPlayer } from '../actions'\nimport { Table } from 'semantic-ui-react'\n\nclass PlayerSeasonRow extends React.Component {\n    render() {\n        let { age, mp_per_g, fg_per_g, fga_per_g, fg_pct, fg3_per_g, fg3a_per_g, fg3_pct, efg_pct, ft_per_g, fta_per_g, ft_pct, orb_per_g, drb_per_g, trb_per_g, ast_per_g, stl_per_g, blk_per_g, tov_per_g, pts_per_g, gp, fg2_per_g, fg2a_per_g, fg2_pct, pf_per_g, position } = this.props.playerSeason\n\n        let name = this.props.playerSeason.player.name\n        let id = this.props.playerSeason.player.id\n\n        return (\n            <Table.Row>\n                <Table.Cell >\n                    <Link onClick={() => this.props.setPlayer(this.props.playerSeason.player)} to={`/player/${id}`}>\n                        {name}\n                    </Link>\n                </Table.Cell>\n                <Table.Cell>{position}</Table.Cell>\n                <Table.Cell>{age}</Table.Cell>\n                <Table.Cell>{this.props.playerSeason.team_season.code}</Table.Cell>\n                <Table.Cell>{gp}</Table.Cell>\n                <Table.Cell>{mp_per_g}</Table.Cell>\n                <Table.Cell>{fg_per_g}</Table.Cell>\n                <Table.Cell>{fga_per_g}</Table.Cell>\n                <Table.Cell>{fg_pct}</Table.Cell>\n                <Table.Cell>{fg3_per_g}</Table.Cell>\n                <Table.Cell>{fg3a_per_g}</Table.Cell>\n                <Table.Cell>{fg3_pct || '.000'}</Table.Cell>\n                <Table.Cell>{fg2_per_g}</Table.Cell>\n                <Table.Cell>{fg2a_per_g}</Table.Cell>\n                <Table.Cell>{fg2_pct || '.000'}</Table.Cell>\n                <Table.Cell>{efg_pct}</Table.Cell>\n                <Table.Cell>{ft_per_g}</Table.Cell>\n                <Table.Cell>{fta_per_g}</Table.Cell>\n                <Table.Cell>{ft_pct || '.000'}</Table.Cell>\n                <Table.Cell>{orb_per_g}</Table.Cell>\n                <Table.Cell>{drb_per_g}</Table.Cell>\n                <Table.Cell>{trb_per_g}</Table.Cell>\n                <Table.Cell>{ast_per_g}</Table.Cell>\n                <Table.Cell>{stl_per_g}</Table.Cell>\n                <Table.Cell>{blk_per_g}</Table.Cell>\n                <Table.Cell>{tov_per_g}</Table.Cell>\n                <Table.Cell>{pf_per_g}</Table.Cell>\n                <Table.Cell>{pts_per_g}</Table.Cell>\n            </Table.Row>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        playerSeason: state.currSeason.playerSeasons.data.find((ps) => {\n            return ps.id === ownProps.id\n        })\n    }\n\n}\n\nexport default connect(mapStateToProps, { setPlayer })(PlayerSeasonRow)","import React from 'react';\nimport PlayerSeasonRow from './PlayerSeasonRow';\nimport { Table } from 'semantic-ui-react'\n\nclass PlayerSeasonTable extends React.Component {\n    render() {\n        return (\n            <div>\n                <Table fullwidth celled inverted selectable textAlign='center'\n                    style={{\n                        tableLayout: 'fixed',\n                        maxWidth: '100%',\n                        fontSize: '75%',\n                        whiteSpace: 'nowrap'\n                    }}>\n                    <Table.Header >\n                        <Table.Row>\n                            <Table.HeaderCell width={2}>NAME</Table.HeaderCell>\n                            <Table.HeaderCell>POS</Table.HeaderCell>\n                            <Table.HeaderCell>AGE</Table.HeaderCell>\n                            <Table.HeaderCell>TM</Table.HeaderCell>\n                            <Table.HeaderCell>G</Table.HeaderCell>\n                            <Table.HeaderCell>MP</Table.HeaderCell>\n                            <Table.HeaderCell>FG</Table.HeaderCell>\n                            <Table.HeaderCell>FGA</Table.HeaderCell>\n                            <Table.HeaderCell>FG%</Table.HeaderCell>\n                            <Table.HeaderCell>3P</Table.HeaderCell>\n                            <Table.HeaderCell>3PA</Table.HeaderCell>\n                            <Table.HeaderCell>3P%</Table.HeaderCell>\n                            <Table.HeaderCell>2P</Table.HeaderCell>\n                            <Table.HeaderCell>2PA</Table.HeaderCell>\n                            <Table.HeaderCell>2P%</Table.HeaderCell>\n                            <Table.HeaderCell>eFG%</Table.HeaderCell>\n                            <Table.HeaderCell>FT</Table.HeaderCell>\n                            <Table.HeaderCell>FTA</Table.HeaderCell>\n                            <Table.HeaderCell>FT%</Table.HeaderCell>\n                            <Table.HeaderCell>ORB</Table.HeaderCell>\n                            <Table.HeaderCell>DRB</Table.HeaderCell>\n                            <Table.HeaderCell>TRB</Table.HeaderCell>\n                            <Table.HeaderCell>AST</Table.HeaderCell>\n                            <Table.HeaderCell>STL</Table.HeaderCell>\n                            <Table.HeaderCell>BLK</Table.HeaderCell>\n                            <Table.HeaderCell>TOV</Table.HeaderCell>\n                            <Table.HeaderCell>PF</Table.HeaderCell>\n                            <Table.HeaderCell>PTS</Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.props.playerSeasons.map((ps, idx) => {\n                            return <PlayerSeasonRow id={ps.id} key={idx} />\n                        })}\n\n                    </Table.Body>\n                </Table>\n            </div>\n        )\n\n\n    }\n}\n\nexport default PlayerSeasonTable","import React from 'react';\n\nconst SearchBar = ({ onSearchChange }) => {\n    return (\n        <div >\n            <input className=\"searchBar\" type=\"search\" placeholder=\"search for player\"\n                onChange={onSearchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBar;","import React from 'react';\nimport PlayerSeasonTable from '../components/PlayerSeasonTable';\nimport SearchBar from '../components/SearchBar'\nimport { connect } from 'react-redux'\n\n\nclass PlayerSeasonContainer extends React.Component {\n\n    constructor() {\n        super()\n        this.state = {\n            searchTerm: ''\n        }\n    }\n\n    onSearchChange = (e) => {\n        this.setState({ searchTerm: e.target.value })\n    }\n\n    render() {\n\n\n        let filteredPlayers = this.props.season.playerSeasons.data.filter(ps => {\n            return ps.player.name.toLowerCase().includes(this.state.searchTerm.toLowerCase())\n        })\n        return (\n            <div>\n                <SearchBar className='ui segment' onSearchChange={this.onSearchChange} />\n                <PlayerSeasonTable id='PlayerSeason' className='ui centered segment' playerSeasons={filteredPlayers} />\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { season: state.currSeason }\n}\n\nexport default connect(mapStateToProps)(PlayerSeasonContainer)\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { setGame } from '../actions'\nimport { Table, TableCell } from 'semantic-ui-react';\n\nclass GameRow extends React.Component {\n\n    render() {\n        let { id, date, start_time, home_team, home_pts, away_team, away_pts } = this.props.game\n\n        let convertedDate = (date.substring(4, 6) + '/' + date.substring(6, 8) + '/' + date.substring(0, 4))\n        return (\n            <Table.Row>\n                <TableCell>{convertedDate}</TableCell>\n                <TableCell>{start_time}</TableCell>\n                <TableCell>{home_team.name}</TableCell >\n                <TableCell>{home_pts}</TableCell>\n                <TableCell>{away_team.name}</TableCell>\n                <TableCell>{away_pts}</TableCell>\n                <TableCell>\n                    <Link onClick={() => this.props.setGame(this.props.game)} to={`/gamebox/${id}`}> Box Score</Link>\n                </TableCell>\n            </Table.Row>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        game: state.currSeason.seasonGames.data.find((sg) => {\n            return sg.id === ownProps.id\n        })\n    }\n\n}\n\nexport default connect(mapStateToProps, { setGame })(GameRow)\n\n\n\n","import React from 'react';\nimport GameRow from './GameRow';\nimport { connect } from 'react-redux'\nimport { Table } from 'semantic-ui-react'\n\n\nclass GameTable extends React.Component {\n    render() {\n        return (\n            <Table id=\"Games\" fullwidth celled inverted selectable textAlign='center'\n                style={{\n                    tableLayout: 'fixed',\n                    maxWidth: '100%',\n                    fontSize: '75%',\n                    whiteSpace: 'nowrap'\n                }}>\n\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>Start</Table.HeaderCell>\n                        <Table.HeaderCell>Home</Table.HeaderCell>\n                        <Table.HeaderCell>Pts</Table.HeaderCell>\n                        <Table.HeaderCell>Away</Table.HeaderCell>\n                        <Table.HeaderCell>Pts</Table.HeaderCell>\n                        <Table.HeaderCell>Box</Table.HeaderCell>\n                    </Table.Row>\n                </Table.Header>\n\n                <Table.Body>\n                    {this.props.seasonGames.data.map(gm => {\n                        return <GameRow id={gm.id} key={gm.id} />\n                    })}\n                </Table.Body>\n            </Table>\n        )\n    }\n}\n\nconst mapStatetoProps = (state) => {\n    return { seasonGames: state.currSeason.seasonGames }\n}\n\nexport default connect(mapStatetoProps)(GameTable)\n","import React from 'react';\nimport GameTable from '../components/GameTable';\n\nclass GamesContainer extends React.Component {\n\n    render() {\n        return (\n            <div className='ui container center aligned'>\n                <h2 className=\"ui centered \">SEASON SCHEDULE</h2>\n                <GameTable />\n            </div>\n        )\n    }\n}\n\n\nexport default GamesContainer\n","import React from 'react';\nimport { Table, TableCell } from 'semantic-ui-react'\n\nclass BoxRow extends React.Component {\n\n    render() {\n        let { mp, fg, fga, fg_pct, fg3, fg3a, fg3_pct, ft, fta, ft_pct, orb, drb, trb, ast, stl, blk, tov, pts, plus_minus, pf, dnp } = this.props.line\n\n        let name = this.props.line.player_season.player\n\n        return (\n            dnp ?\n                <Table.Row>\n                    <TableCell>{name}</TableCell>\n                    <TableCell>DNP</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n\n                </Table.Row>\n                :\n                < Table.Row >\n                    <TableCell>{name}</TableCell>\n                    <TableCell>{mp}</TableCell>\n                    <TableCell>{fg}</TableCell>\n                    <TableCell>{fga}</TableCell>\n                    <TableCell>{fg_pct || '.000'}</TableCell>\n                    <TableCell>{fg3}</TableCell>\n                    <TableCell>{fg3a}</TableCell>\n                    <TableCell>{fg3_pct || '.000'}</TableCell>\n                    <TableCell>{ft}</TableCell>\n                    <TableCell>{fta}</TableCell>\n                    <TableCell>{ft_pct || '.000'}</TableCell>\n                    <TableCell>{orb}</TableCell>\n                    <TableCell>{drb}</TableCell>\n                    <TableCell>{trb}</TableCell>\n                    <TableCell>{ast}</TableCell>\n                    <TableCell>{stl}</TableCell>\n                    <TableCell>{blk}</TableCell>\n                    <TableCell>{tov}</TableCell>\n                    <TableCell>{pf}</TableCell>\n                    <TableCell>{pts}</TableCell>\n                    <TableCell>{plus_minus}</TableCell >\n                </Table.Row >\n        )\n    }\n\n}\n\n\nexport default BoxRow\n","import React from 'react';\nimport BoxRow from './BoxRow'\n\nimport { Table } from 'semantic-ui-react'\n\nclass BoxScoreTable extends React.Component {\n    render() {\n        //table ordered by minutes played\n        let ordered = this.props.lines.sort((a, b) => {\n            let aa = parseInt(a.mp) || -1\n            let bb = parseInt(b.mp) || -1\n            return bb - aa\n        })\n        return (\n            <Table id=\"Games\" fullwidth celled inverted selectable >\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Player</Table.HeaderCell>\n                        <Table.HeaderCell>MP</Table.HeaderCell>\n                        <Table.HeaderCell>FG</Table.HeaderCell>\n                        <Table.HeaderCell>FGA</Table.HeaderCell>\n                        <Table.HeaderCell>FG%</Table.HeaderCell>\n                        <Table.HeaderCell>3P</Table.HeaderCell>\n                        <Table.HeaderCell>3PA</Table.HeaderCell>\n                        <Table.HeaderCell>3P%</Table.HeaderCell>\n                        <Table.HeaderCell>FT</Table.HeaderCell>\n                        <Table.HeaderCell>FTA</Table.HeaderCell>\n                        <Table.HeaderCell>FT%</Table.HeaderCell>\n                        <Table.HeaderCell>ORB</Table.HeaderCell>\n                        <Table.HeaderCell>DRB</Table.HeaderCell>\n                        <Table.HeaderCell>TRB</Table.HeaderCell>\n                        <Table.HeaderCell>AST</Table.HeaderCell>\n                        <Table.HeaderCell>STL</Table.HeaderCell>\n                        <Table.HeaderCell>BLK</Table.HeaderCell>\n                        <Table.HeaderCell>TOV</Table.HeaderCell>\n                        <Table.HeaderCell>PF</Table.HeaderCell>\n                        <Table.HeaderCell>PTS</Table.HeaderCell>\n                        <Table.HeaderCell>+/-</Table.HeaderCell>\n                    </Table.Row>\n\n                </Table.Header>\n                <Table.Body>\n                    {ordered.map((li, idx) => {\n                        return <BoxRow line={li} key={idx} />\n                    })}\n\n                </Table.Body>\n            </Table>\n        )\n\n\n    }\n}\n\nexport default BoxScoreTable","import React from 'react';\nimport BoxScoreTable from '../components/BoxScoreTable';\n\nimport { connect } from 'react-redux'\nimport { fetchGameBoxScore } from '../actions'\n\nclass GameBoxScore extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchGameBoxScore()\n    }\n\n    filterBoxScore = (boxscore) => {\n        let team_filtered = { home: [], away: [] }\n        let home = this.props.currGame.home_team.name\n        boxscore.forEach(game => {\n            game.player_season.team === home ?\n                team_filtered.home.push(game)\n                :\n                team_filtered.away.push(game)\n        })\n        return team_filtered\n    }\n\n    render() {\n\n        //could display much more game info here-- maybe a whole game header component\n        let home = this.props.currGame.home_team.name\n        let away = this.props.currGame.away_team.name\n        let date = this.props.currGame.date\n        let convertedDate = (date.substring(4, 6) + '/' + date.substring(6, 8) + '/' + date.substring(0, 4))\n\n        let boxscore = this.props.currGame.boxscore\n        let filtered\n        boxscore ? filtered = this.filterBoxScore(boxscore) : filtered = false\n\n        return (\n            <div>\n                {filtered ?\n                    <div>\n                        <h3>{convertedDate}:  {away} at {home}</h3>\n\n                        <h2>{away}</h2>\n                        <BoxScoreTable lines={filtered.away} />\n                        <br></br>\n\n                        <h2>{home}</h2>\n                        <BoxScoreTable lines={filtered.home} />\n                    </div>\n                    :\n                    <div>LOADING... </div>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { currGame: state.currGame }\n}\n\n\nexport default connect(mapStateToProps, { fetchGameBoxScore })(GameBoxScore)\n\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { fetchAllSeasonDataIfNeeded } from '../actions'\nimport Loader from 'react-loader-spinner'\n\nclass SeasonLanding extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchAllSeasonDataIfNeeded()\n    }\n\n    render() {\n        const yr = this.props.season.year\n        const playerSeasons = this.props.season.playerSeasons\n        const seasonGames = this.props.season.seasonGames\n        let ready = (!(playerSeasons.data === 0 || seasonGames.data === 0) && !(playerSeasons.isFetching || seasonGames.isFetching))\n        return (\n            <div>\n                {ready ?\n                    <div>\n                        <div className='ui container center aligned landing'>\n                            <div className='ui centered '>\n                                <button className=\"ui primary basic button\"><Link to={`/seasonavgs/${yr}`}> Player Averages</Link></button>\n                            </div>\n                            <br></br>\n                            <div className='ui centered '>\n                                <button className=\"ui primary basic button\"><Link to={`/games/${yr}`}>Schedule / Boxscores</Link></button>\n                            </div>\n                            <br></br>\n                            <div className='ui centered '>\n                                <button className=\"ui primary basic button\"><Link to={`/comparison/${yr}`}>Player Comparison</Link></button>\n                            </div>\n\n\n                        </div>\n\n\n                    </div> :\n                    <div className=\"ui container center aligned\">\n                        <div className=\"ui item centered\">\n                            <h2>Loading Season Data...</h2>\n                            <Loader type=\"Rings\" color='#266ee2' height={400} width={400} />\n                        </div>\n\n                    </div>\n                }\n            </div >\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        season: state.currSeason,\n    }\n}\n\n\nexport default connect(mapStateToProps, { fetchAllSeasonDataIfNeeded })(SeasonLanding)\n\n\n","import React from 'react';\nimport { Table, TableCell } from 'semantic-ui-react'\n\nclass PersonalRow extends React.Component {\n\n    render() {\n        let { mp, fg, fga, fg_pct, fg3, fg3a, fg3_pct, ft, fta, ft_pct, orb, drb, trb, ast, stl, blk, tov, pts, plus_minus, pf, dnp } = this.props.line\n\n        let date = this.props.line.date\n        let convertedDate = (date.substring(4, 6) + '/' + date.substring(6, 8) + '/' + date.substring(0, 4))\n\n        return (\n            dnp ?\n                <Table.Row>\n                    <TableCell>{convertedDate}</TableCell>\n                    <TableCell>DNP</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n                    <TableCell>/</TableCell>\n\n                </Table.Row>\n                :\n                < Table.Row >\n                    <TableCell>{convertedDate}</TableCell>\n                    <TableCell>{mp}</TableCell>\n                    <TableCell>{fg}</TableCell>\n                    <TableCell>{fga}</TableCell>\n                    <TableCell>{fg_pct || '.000'}</TableCell>\n                    <TableCell>{fg3}</TableCell>\n                    <TableCell>{fg3a}</TableCell>\n                    <TableCell>{fg3_pct || '.000'}</TableCell>\n                    <TableCell>{ft}</TableCell>\n                    <TableCell>{fta}</TableCell>\n                    <TableCell>{ft_pct || '.000'}</TableCell>\n                    <TableCell>{orb}</TableCell>\n                    <TableCell>{drb}</TableCell>\n                    <TableCell>{trb}</TableCell>\n                    <TableCell>{ast}</TableCell>\n                    <TableCell>{stl}</TableCell>\n                    <TableCell>{blk}</TableCell>\n                    <TableCell>{tov}</TableCell>\n                    <TableCell>{pf}</TableCell>\n                    <TableCell>{pts}</TableCell>\n                    <TableCell>{plus_minus}</TableCell >\n                </Table.Row >\n        )\n    }\n}\n\n\nexport default PersonalRow\n","import React from 'react';\nimport PersonalRow from './PersonalRow'\nimport { Table, TableBody } from 'semantic-ui-react'\n\nclass PersonalBoxTable extends React.Component {\n    render() {\n        return (\n            <Table id=\"Games\" fullwidth celled inverted selectable className=\"\">\n                <Table.Header>\n                    <Table.Row>\n                        <Table.HeaderCell>Date</Table.HeaderCell>\n                        <Table.HeaderCell>MP</Table.HeaderCell>\n                        <Table.HeaderCell>FG</Table.HeaderCell>\n                        <Table.HeaderCell>FGA</Table.HeaderCell>\n                        <Table.HeaderCell>FG%</Table.HeaderCell>\n                        <Table.HeaderCell>3P</Table.HeaderCell>\n                        <Table.HeaderCell>3PA</Table.HeaderCell>\n                        <Table.HeaderCell>3P%</Table.HeaderCell>\n                        <Table.HeaderCell>FT</Table.HeaderCell>\n                        <Table.HeaderCell>FTA</Table.HeaderCell>\n                        <Table.HeaderCell>FT%</Table.HeaderCell>\n                        <Table.HeaderCell>ORB</Table.HeaderCell>\n                        <Table.HeaderCell>DRB</Table.HeaderCell>\n                        <Table.HeaderCell>TRB</Table.HeaderCell>\n                        <Table.HeaderCell>AST</Table.HeaderCell>\n                        <Table.HeaderCell>STL</Table.HeaderCell>\n                        <Table.HeaderCell>BLK</Table.HeaderCell>\n                        <Table.HeaderCell>TOV</Table.HeaderCell>\n                        <Table.HeaderCell>PF</Table.HeaderCell>\n                        <Table.HeaderCell>PTS</Table.HeaderCell>\n                        <Table.HeaderCell>+/-</Table.HeaderCell>\n                    </Table.Row>\n\n                </Table.Header>\n                <TableBody>\n                    {this.props.lines.map((li, idx) => {\n                        return <PersonalRow line={li} key={idx} />\n                    })}\n\n                </TableBody>\n            </Table>\n        )\n\n\n    }\n}\n\nexport default PersonalBoxTable","import React from 'react'\n\nimport { Table, TableCell } from 'semantic-ui-react'\n\nconst PlayerDisplayTable = (props) => {\n    return (\n        <Table id=\"PlayerSeason\" celled inverted selectable\n            style={{\n                tableLayout: 'fixed',\n                maxWidth: '100%',\n                fontSize: '80%',\n                whiteSpace: 'nowrap'\n            }}>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>YR</Table.HeaderCell>\n                    <Table.HeaderCell>POS</Table.HeaderCell>\n                    <Table.HeaderCell>AGE</Table.HeaderCell>\n                    <Table.HeaderCell>TM</Table.HeaderCell>\n                    <Table.HeaderCell>G</Table.HeaderCell>\n                    <Table.HeaderCell>MP</Table.HeaderCell>\n                    <Table.HeaderCell>FG</Table.HeaderCell>\n                    <Table.HeaderCell>FGA</Table.HeaderCell>\n                    <Table.HeaderCell>FG%</Table.HeaderCell>\n                    <Table.HeaderCell>3P</Table.HeaderCell>\n                    <Table.HeaderCell>3PA</Table.HeaderCell>\n                    <Table.HeaderCell>3P%</Table.HeaderCell>\n                    <Table.HeaderCell>2P</Table.HeaderCell>\n                    <Table.HeaderCell>2PA</Table.HeaderCell>\n                    <Table.HeaderCell>2P%</Table.HeaderCell>\n                    <Table.HeaderCell>eFG%</Table.HeaderCell>\n                    <Table.HeaderCell>FT</Table.HeaderCell>\n                    <Table.HeaderCell>FTA</Table.HeaderCell>\n                    <Table.HeaderCell>FT%</Table.HeaderCell>\n                    <Table.HeaderCell>ORB</Table.HeaderCell>\n                    <Table.HeaderCell>DRB</Table.HeaderCell>\n                    <Table.HeaderCell>TRB</Table.HeaderCell>\n                    <Table.HeaderCell>AST</Table.HeaderCell>\n                    <Table.HeaderCell>STL</Table.HeaderCell>\n                    <Table.HeaderCell>BLK</Table.HeaderCell>\n                    <Table.HeaderCell>TOV</Table.HeaderCell>\n                    <Table.HeaderCell>PF</Table.HeaderCell>\n                    <Table.HeaderCell>PTS</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                {props.player.data.player_seasons.map(ps => {\n                    return (\n                        <Table.Row key={ps.id}>\n                            <TableCell>{ps.year}</TableCell>\n                            <TableCell>{ps.position}</TableCell>\n                            <TableCell>{ps.age}</TableCell>\n                            <TableCell>{ps.team}</TableCell>\n                            <TableCell>{ps.gp}</TableCell>\n                            <TableCell>{ps.mp_per_g}</TableCell>\n                            <TableCell>{ps.fg_per_g}</TableCell>\n                            <TableCell>{ps.fga_per_g}</TableCell>\n                            <TableCell>{ps.fg_pct}</TableCell>\n                            <TableCell>{ps.fg3_per_g}</TableCell>\n                            <TableCell>{ps.fg3a_per_g}</TableCell>\n                            <TableCell>{ps.fg3_pct || '.000'}</TableCell>\n                            <TableCell>{ps.fg2_per_g}</TableCell>\n                            <TableCell>{ps.fg2a_per_g}</TableCell>\n                            <TableCell>{ps.fg2_pct || '.000'}</TableCell>\n                            <TableCell>{ps.efg_pct}</TableCell>\n                            <TableCell>{ps.ft_per_g}</TableCell>\n                            <TableCell>{ps.fta_per_g}</TableCell>\n                            <TableCell>{ps.ft_pct || '.000'}</TableCell>\n                            <TableCell>{ps.orb_per_g}</TableCell>\n                            <TableCell>{ps.drb_per_g}</TableCell>\n                            <TableCell>{ps.trb_per_g}</TableCell>\n                            <TableCell>{ps.ast_per_g}</TableCell>\n                            <TableCell>{ps.stl_per_g}</TableCell>\n                            <TableCell>{ps.blk_per_g}</TableCell>\n                            <TableCell>{ps.tov_per_g}</TableCell>\n                            <TableCell>{ps.pf_per_g}</TableCell>\n                            <TableCell>{ps.pts_per_g}</TableCell>\n                        </Table.Row>\n                    )\n                })}\n\n            </Table.Body>\n\n\n        </Table>\n    )\n}\nexport default PlayerDisplayTable\n\n\n\n\n\n\n\n","import React from 'react'\nimport {\n    VictoryChart,\n    VictoryLine,\n    VictoryAxis,\n    VictoryTheme,\n    VictoryTooltip,\n    VictoryVoronoiContainer\n} from 'victory';\n\nconst colorCodes = [\"gold\", \"green\", 'cornflowerblue']\n\nclass PlayerStatsVictory extends React.Component {\n    constructor() {\n        super()\n        this.state = {\n            selected: 'pts'\n        }\n    }\n\n    mapLinestoVictory() {\n        let count\n        if (this.props.lines.length === 10) {\n            console.log(this.props.lines)\n            let result = []\n            count = 0\n            result.push(this.props.lines.map(g => {\n                let yy\n                let label = `${this.readableDate(g.date)}`\n                if (g.dnp) {\n                    yy = 0\n                    label += ' (DNP)'\n                } else if (this.state.selected === '+/-') {\n                    yy = parseInt(g['plus_minus'])\n                } else {\n                    let stat = parseInt(g[this.state.selected])\n                    yy = stat\n                    label += ` ${this.state.selected.toUpperCase()}: ${stat}`\n                }\n                count++;\n                return (\n                    {\n                        x: count,\n                        y: yy,\n                        label: label\n                    }\n                )\n            }))\n            return result\n        } else {\n            return this.props.lines.map(pls => {\n                count = 0\n                let ml = pls.map(g => {\n                    let yy\n                    let label = `${this.readableDate(g.date)}`\n                    if (g.dnp) {\n                        yy = 0\n                        label += ' (DNP)'\n                    } else if (this.state.selected === '+/-') {\n                        yy = parseInt(g['plus_minus'])\n                    } else {\n                        let stat = parseInt(g[this.state.selected])\n                        yy = stat\n                        label += ` ${this.state.selected.toUpperCase()}: ${stat}`\n                    }\n                    count++;\n                    return (\n                        {\n                            x: count,\n                            y: yy,\n                            label: label\n                        }\n                    )\n                })\n                return ml\n            })\n        }\n    }\n\n    //not used right now\n    getDates = () => {\n        let dates = this.props.lines.map(g => {\n            return (this.readableDate(g.date))\n        })\n        return dates\n    }\n\n    readableDate = (date) => {\n        return (date.substring(4, 6) + '/' + date.substring(6, 8))\n    }\n\n    onMenuClick = (e) => {\n        let selected = e.target.innerText.toLowerCase()\n        if (selected === '+/-') {\n            selected = 'plus_minus'\n        }\n        this.setState({ selected })\n    }\n\n    render() {\n        let mappedLines = this.mapLinestoVictory()\n        console.log(mappedLines)\n        let title = this.state.selected.toLocaleUpperCase()\n        if (title === 'PLUS_MINUS') {\n            title = \"+/-\"\n        }\n\n        return (\n            <div className='ui container '>\n                <div className=\"ui six item menu inverted\">\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">PTS</button>\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">TRB</button>\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">AST</button>\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">STL</button>\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">BLK</button>\n                    <button onClick={(e) => this.onMenuClick(e)} className=\"item\">+/-</button>\n                </div>\n                <div >\n                    <h1>Last 10: {title}</h1>\n                </div>\n\n                <div className='victory'>\n\n                    <VictoryChart domainPadding={10} height={300} width={500} theme={VictoryTheme.grayscale}\n                        containerComponent={<VictoryVoronoiContainer />}>\n\n                        {mappedLines.map((lines, idx) => {\n                            return (\n                                <VictoryLine\n                                    key={idx}\n                                    labelComponent={\n                                        <VictoryTooltip\n\n                                            flyoutStyle={{\n                                                stroke: \"tomato\"\n                                            }} />}\n\n                                    interpolation=\"natural\"\n                                    style={{\n                                        data: { stroke: colorCodes[idx] },\n                                        parent: { border: \"1px solid #ccc\" }\n                                    }}\n                                    animate={{\n                                        duration: 2000,\n                                        onLoad: { duration: 2000 }\n                                    }}\n\n                                    data={lines}\n                                />)\n                        })}\n\n                        <VictoryAxis dependentAxis\n                            style={{\n                                axis: { stroke: \"#bac2d1\" },\n                                tickLabels: { stroke: \"bac2d1\", fontSize: 10 },\n                                ticks: { stroke: \"grey\", size: 5 },\n                                axisLabel: { padding: 50 }\n                            }} />\n\n                        <VictoryAxis independentAxis\n                            tickValues={[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]}\n                            tickFormat={() => '.'}\n                            style={{\n                                axis: { stroke: \"#bac2d1\" },\n                                axisLabel: { padding: 200 },\n                                ticks: { stroke: \"grey\", size: 5 }\n\n                            }}\n                        />\n                    </VictoryChart >\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default PlayerStatsVictory\n","import React from 'react'\nimport {\n    VictoryChart, VictoryGroup, VictoryArea, VictoryPolarAxis, VictoryLabel, VictoryTheme,\n} from 'victory';\n\nclass PlayerRadar extends React.Component {\n\n    getMaxima(data) {\n        const groupedData = Object.keys(data[0]).reduce((memo, key) => {\n            memo[key] = data.map((d) => d[key]);\n            return memo;\n        }, {});\n        return Object.keys(groupedData).reduce((memo, key) => {\n            memo[key] = Math.max(...groupedData[key]);\n            return memo;\n        }, {});\n    }\n\n    processData(data) {\n        const maxByGroup = this.getMaxima(data);\n        const makeDataArray = (d) => {\n            return Object.keys(d).map((key) => {\n                return { x: key, y: d[key] / maxByGroup[key] };\n            });\n        };\n        return data.map((datum) => makeDataArray(datum));\n    }\n\n    render() {\n        let statData = this.processData(this.props.stats)\n        let statMaxima = this.getMaxima(this.props.stats)\n        return (\n            <div className='ui container victory2'>\n                <VictoryChart polar\n                    theme={VictoryTheme.material}\n                    domain={{ y: [0, 1] }}\n                    animate={{ duration: 400 }}\n                >\n                    <VictoryGroup colorScale={[\"gold\", \"green\", '#266ee2']}\n                        style={{ data: { fillOpacity: 0.1, strokeWidth: 2 } }}\n                    >\n                        {statData.map((data, i) => {\n                            return <VictoryArea key={i} data={data} />;\n                        })}\n                    </VictoryGroup>\n\n                    {\n                        Object.keys(statMaxima).map((key, i) => {\n                            return (\n                                <VictoryPolarAxis key={i} dependentAxis\n                                    style={{\n                                        axisLabel: { padding: 10 },\n                                        axis: { stroke: \"none\" },\n                                        grid: { stroke: \"white\", strokeWidth: 0.4, opacity: 1 }\n                                    }}\n\n                                    tickLabelComponent={\n                                        <VictoryLabel labelPlacement=\"vertical\" />\n                                    }\n                                    labelPlacement=\"perpendicular\"\n                                    axisValue={i + 1} label={key}\n                                    tickValues={[0.25, 0.5, 0.75]}\n                                    tickFormat={(t) => {\n                                        let num = Math.ceil((t * statMaxima[key]))\n                                        return num > 1 ? num :\n                                            Math.round((t * statMaxima[key]) * 10) / 10\n                                    }}\n                                />\n                            );\n                        })\n                    }\n                    <VictoryPolarAxis\n                        labelPlacement=\"parallel\"\n                        tickFormat={() => \"\"}\n                        style={{\n                            tickLabels: { stroke: \"red\" },\n                            axis: { stroke: \"none\" },\n                            grid: { stroke: \"white\", opacity: 0.5 }\n                        }}\n                    />\n\n                </VictoryChart>\n            </div >\n        );\n    }\n}\nexport default PlayerRadar\n\n","import React from 'react';\nimport PersonalBoxTable from './PersonalBoxTable';\nimport PlayerDisplayTable from './SelectedDisplay/PlayerDisplayTable'\nimport PlayerStatsVictory from './SelectedDisplay/PlayerStatsVictory'\nimport PlayerRadar from './SelectedDisplay/PlayerRadar'\n\nimport { connect } from 'react-redux'\nimport { fetchPlayer } from '../actions'\n\nclass PlayerDisplay extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchPlayer()\n    }\n\n    getRelaventGames = () => {\n        let currPlayerSeasonGames = this.props.player.data.player_seasons.find(ps => ps.year = this.props.currSeason.year).games\n        let sorted = currPlayerSeasonGames.sort((a, b) => {\n            return parseInt(b.date) - parseInt(a.date)\n        })\n        return sorted.slice(0, 10)\n    }\n\n    radarPrep = () => {\n        let currYear = this.props.currSeason.year\n        let stats\n        if (currYear === 2019) {\n            stats = [{\n                PTS: 10.2,\n                REB: 4.1,\n                AST: 2.0,\n                STL: 0.7,\n                BLK: 0.4\n            }]\n        } else if (currYear === 2018) {\n            stats = [{\n                PTS: 10.,\n                REB: 3.8,\n                AST: 1.8,\n                STL: 0.7,\n                BLK: 0.4\n            }]\n        }\n\n        let currPS = this.props.player.data.player_seasons.filter(ps => {\n            return ps.year === currYear\n        })[0]\n\n        let playerObj = {\n            PTS: parseFloat(currPS['pts_per_g']),\n            REB: parseFloat(currPS['trb_per_g']),\n            AST: parseFloat(currPS['ast_per_g']),\n            STL: parseFloat(currPS['stl_per_g']),\n            BLK: parseFloat(currPS['blk_per_g'])\n        }\n        stats.push(playerObj)\n        return stats\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\">\n                <h1 className=\"playerShowcase\">{this.props.player.name}</h1>\n\n                {this.props.player.data ?\n                    <div>\n                        <h2>Season Averages: </h2>\n                        <PlayerDisplayTable id=\"playerSeasonBars\" player={this.props.player} />\n                        <div>\n                            <h2>Radar: </h2>\n                            <h3 style={{ color: 'gold' }}>League Average</h3>\n                            <h3 style={{ color: 'green' }}> {this.props.player.name}</h3>\n\n                        </div>\n                        <PlayerRadar stats={this.radarPrep()} />\n                        <br></br>\n                        <PlayerStatsVictory lines={this.getRelaventGames().reverse()} />\n                        <h2 className=\"ui item centered\">Last 10 Games</h2>\n                        <PersonalBoxTable lines={this.getRelaventGames()} />\n                    </div>\n                    :\n                    <div>\n                        LOADING....\n                    </div>\n                }\n            </div >\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        player: state.currPlayer,\n        currSeason: state.currSeason\n    }\n}\n\n\nexport default connect(mapStateToProps, { fetchPlayer })(PlayerDisplay)\n\n","import React from 'react'\n\nimport { Table, TableCell } from 'semantic-ui-react'\n\nconst RadarTable = ({ stats }) => {\n    return (\n        <Table id=\"RadarTable\" celled inverted selectable>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>PTS</Table.HeaderCell>\n                    <Table.HeaderCell>REB</Table.HeaderCell>\n                    <Table.HeaderCell>AST</Table.HeaderCell>\n                    <Table.HeaderCell>STL</Table.HeaderCell>\n                    <Table.HeaderCell>BLK</Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            <Table.Body>\n                <Table.Row key={stats.PTS}>\n                    <TableCell>{stats.PTS}</TableCell>\n                    <TableCell>{stats.REB}</TableCell>\n                    <TableCell>{stats.AST}</TableCell>\n                    <TableCell>{stats.STL}</TableCell>\n                    <TableCell>{stats.BLK}</TableCell>\n                </Table.Row>\n            </Table.Body>\n\n\n        </Table>\n    )\n}\nexport default RadarTable\n\n\n\n\n\n\n\n","import React from 'react'\nimport { Dropdown } from 'semantic-ui-react'\nimport PlayerRadar from './PlayerRadar';\nimport RadarTable from './RadarTable'\nimport { connect } from 'react-redux'\nimport { setComparison } from '../../actions'\n\nclass MultiDropdown extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            playerSeasons: this.props.playerSeasons,\n            selected: []\n        }\n    }\n\n    handleChange = (e, { value }) => {\n        let selected\n        const maxSelect = 3\n        if (value.length > maxSelect) {\n            selected = value.slice(0, 3)\n        } else {\n            selected = value\n        }\n\n        let selectedSeasons = this.getSelectedSeasons(selected)\n        this.setState({\n            selected: selectedSeasons\n        }, () => {\n            this.props.setComparison(selectedSeasons)\n        })\n    }\n\n    getSelectedSeasons(arr) {\n        return arr.map((id => {\n            return this.state.playerSeasons.filter(ps => ps.id === id)\n        }))\n    }\n\n    radarPrep = () => {\n        let stats = this.state.selected.map(ps => {\n            let nums = ps[0]\n            let playerObj = {\n                PTS: parseFloat(nums['pts_per_g']),\n                REB: parseFloat(nums['trb_per_g']),\n                AST: parseFloat(nums['ast_per_g']),\n                STL: parseFloat(nums['stl_per_g']),\n                BLK: parseFloat(nums['blk_per_g'])\n            }\n\n            return playerObj\n        })\n        return stats\n    }\n\n    radarDisplay = (arr) => {\n        const radarStats = this.radarPrep()\n        const colorsInfo = {\n            colorString: [\"GOLD\", \"GREEN\", \"BLUE\"],\n            colorCode: [\"gold\", \"green\", 'cornflowerblue']\n        }\n        let colorMap = []\n        for (let i = 0; i < arr.length; i++) {\n            let data = {}\n            data.colorCode = colorsInfo.colorString[i]\n            data.str = (`${arr[i][0].player.name.toUpperCase()}`)\n            data.stats = radarStats[i]\n            colorMap.push(data)\n        }\n        return colorMap\n    }\n\n\n    render() {\n        return (\n            <>\n                <Dropdown\n                    onChange={this.handleChange}\n                    placeholder='Select a Player'\n                    fluid\n                    multiple\n                    search\n                    selection\n                    options={\n                        this.state.playerSeasons.map((ps, idx) => {\n                            return ({\n                                key: idx,\n                                text: ps.player.name,\n                                value: ps.id\n                            })\n                        })\n                    }\n                />\n                {this.state.selected.length > 0 ?\n                    <div>\n                        <ul>\n                            {this.radarDisplay(this.state.selected).map((pc, idx) => {\n                                return (\n                                    <li key={idx}>\n                                        <h3 style={{ color: pc.colorCode }}> {pc.str} </h3>\n                                        <RadarTable stats={pc.stats} />\n\n                                    </li>\n                                )\n                            })\n                            }\n                        </ul>\n\n                        <PlayerRadar\n                            stats={this.radarPrep(this.state.selected)}\n                        />\n                    </div>\n                    :\n                    <div>\n                        <h1>Select Up to 3 Players!</h1>\n                    </div>\n                }\n\n            </>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        playerComparison: state.playerComparison\n\n    }\n}\n\n\n\nexport default connect(mapStateToProps, { setComparison })(MultiDropdown)\n\n","import React from 'react'\n\n// import { Lebron, Harden, Giannis, Durant } from '../../assets/PlayerStats'\n\nimport { connect } from 'react-redux'\n\nimport PlayerStatsVictory from './PlayerStatsVictory'\n\nclass PlayerComparison extends React.Component {\n\n    //only worked w/ hardcoded games\n    last10 = () => {\n        let currYear = this.props.season.year\n        let players = this.props.playerComparison.results.data\n\n        let selectedPlayers = players.map(pl => {\n            let currPlayerSeasonGames = pl.player_seasons.find(ps => {\n                return ps.year === currYear\n            }).games\n\n            let sorted = currPlayerSeasonGames.sort((a, b) => {\n                return parseInt(b.date) - parseInt(a.date)\n            })\n\n            return sorted.slice(0, 10)\n        })\n        return selectedPlayers\n    }\n\n    render() {\n        return (\n            <div className='ui container center ' >\n                <div className='ui item centered'>\n                    <PlayerStatsVictory lines={this.last10()} />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        season: state.currSeason,\n        playerComparison: state.playerComparison\n    }\n}\n\nexport default connect(mapStateToProps)(PlayerComparison)\n\n\n\n","import React from 'react'\n\nimport { connect } from 'react-redux'\nimport MultiDropdown from './MultiDropdown'\nimport PlayerComparison from './PlayerComparison'\n\nclass MultiPlayerComparison extends React.Component {\n\n    last10 = () => {\n        let currYear = this.props.season.year\n        let players\n\n        let twoPlayers = players.map(pl => {\n            let currPlayerSeasonGames = pl.player_seasons.find(ps => {\n                return ps.year === currYear\n            }).games\n\n            let sorted = currPlayerSeasonGames.sort((a, b) => {\n                return parseInt(b.date) - parseInt(a.date)\n            })\n\n            return sorted.slice(0, 10)\n        })\n        return twoPlayers\n    }\n\n    radarPrep = () => {\n        let currYear = this.props.season.year\n        let players\n\n        let stats = players.map(pl => {\n            let currPS = pl.player_seasons.filter(ps => {\n                return ps.year === currYear\n            })[0]\n\n            let playerObj = {\n                PTS: parseFloat(currPS['pts_per_g']),\n                REB: parseFloat(currPS['trb_per_g']),\n                AST: parseFloat(currPS['ast_per_g']),\n                STL: parseFloat(currPS['stl_per_g']),\n                BLK: parseFloat(currPS['blk_per_g'])\n            }\n\n            return playerObj\n        })\n        return stats\n    }\n\n    render() {\n        return (\n            <div>\n                <MultiDropdown playerSeasons={this.props.season.playerSeasons.data} />\n\n                {this.props.playerComparison.results ?\n                    <PlayerComparison />\n                    :\n                    null\n                }\n            </div>\n\n\n        )\n\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return ({\n        season: state.currSeason,\n        playerComparison: state.playerComparison\n    })\n}\n\nexport default connect(mapStateToProps)(MultiPlayerComparison)\n","import React from 'react';\nimport './App.css';\nimport MainMenu from './containers/MainMenu'\nimport PlayerSeasonContainer from './containers/PlayerSeasonContainer'\nimport GamesContainer from './containers/GamesContainer'\nimport GameBoxScore from './containers/GameBoxScore'\nimport SeasonLanding from './containers/SeasonLanding'\nimport PlayerDisplay from './components/PlayerDisplay'\nimport MultiPlayerComparison from './components/SelectedDisplay/MultiPlayerComparison'\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter\n          basename={\"/\"}>\n          <div>\n            <Route path=\"/\" exact={true} component={MainMenu} />\n            <Route path=\"/seasonhome/:year\" component={SeasonLanding} />\n            <Route path=\"/seasonavgs/:year\" component={PlayerSeasonContainer} />\n            <Route path=\"/games/:year\" component={GamesContainer} />\n            <Route path=\"/gamebox/:id\" component={GameBoxScore} />\n            <Route path=\"/player/:id\" component={PlayerDisplay} />\n            <Route path=\"/comparison/:year\" component={MultiPlayerComparison} />\n          </div>\n        </BrowserRouter>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n\n","import { combineReducers } from 'redux'\n\nimport allSeasonsReducer from './allSeasonsReducer'\nimport currentSeasonReducer from './currentSeasonReducer'\nimport currentPlayerReducer from './currentPlayerReducer'\nimport currentGameReducer from './currentGameReducer'\nimport playerComparisonReducer from './playerComparisonReducer'\n\nexport default combineReducers({\n    allSeasons: allSeasonsReducer,\n    currSeason: currentSeasonReducer,\n    currPlayer: currentPlayerReducer,\n    currGame: currentGameReducer,\n    playerComparison: playerComparisonReducer\n})","//overkill to give this a reducer- just for redux practice\n//will add more season specific data so that these have some merit-- no reason to fetch them from rails when there's only 2-3\n\nimport giannis from '../assets/giannis.jpg'\nimport harden from '../assets/harden.jpg'\n\n//currently only working with 2019 season for data vis stuff\n\nexport default (state = [], action) => {\n    return [\n        { year: 2019, image: giannis },\n        { year: 2018, image: harden }\n    ]\n}\n","export default (state = {\n    year: 2019,\n    playerSeasons: {\n        data: [],\n        isFetching: false\n    },\n    seasonGames: {\n        data: [],\n        isFetching: false\n    }\n}, action) => {\n    switch (action.type) {\n        case 'SET_SEASON':\n            return { ...state, year: action.payload }\n        case 'REQUEST_PLAYER_SEASONS':\n            return {\n                ...state,\n                playerSeasons: {\n                    ...state.playerSeasons,\n                    isFetching: true,\n                }\n            }\n        case 'RECEIVED_PLAYER_SEASONS':\n            return {\n                ...state,\n                playerSeasons: {\n                    ...state.playerSeasons,\n                    isFetching: false,\n                    data: action.payload\n                }\n            }\n        case 'REQUEST_SEASON_GAMES':\n            return {\n                ...state,\n                seasonGames: {\n                    ...state.seasonGames,\n                    isFetching: true,\n                }\n            }\n        case 'RECEIVED_SEASON_GAMES':\n            return {\n                ...state,\n                seasonGames: {\n                    ...state.seasonGames,\n                    isFetching: false,\n                    data: action.payload\n                }\n            }\n        default:\n            return state\n\n    }\n}\n\n","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_PLAYER':\n            return action.payload\n        case 'FETCH_PLAYER':\n            return { ...state, data: action.payload }\n\n        default:\n            return state\n    }\n}","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_GAME':\n            return action.payload\n        case 'FETCH_GAME_BOX_SCORE':\n            return { ...state, boxscore: action.payload }\n\n        default:\n            return state\n    }\n}","export default (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_COMPARISON':\n            return { ...state, results: action.payload }\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\n\nReactDOM.render(\n    <Provider store={createStore(reducers, applyMiddleware(thunk))}>\n        <App />\n    </Provider >,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}